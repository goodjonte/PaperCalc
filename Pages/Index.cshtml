@page
@model IndexModel
@{

}
<script>
    function filterStock() {
        console.log("herhe");
        var selected = document.getElementById("coatSelect").value;
        var options = document.getElementById("stockSelect").options;
        for (var i = 0; i < options.length; i++) {
            if (options[i].className != selected && selected != "") {
                options[i].style.display = "none";
            } else {
                options[i].style.display = "block";
            }
        }
    }
</script>



<div id="aspeosCalculator" class="text-center">
    <h4 class="display-4 parrotTitle">SRA3</h4>
    <form id="AspeosForm" method="post">
        <div class="AspeosFormRow">
            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" id="basic-addon1" asp-for="AspeosCalculation.Quantity"></label>
                </div>
                <input type="number" class="form-control" asp-for="AspeosCalculation.Quantity">
            </div>

            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.FlatSizeId">Flat Size</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.FlatSizeId">
                    <option value="">Select a Size...</option>
                    @{
                        foreach (PaperCalc.Models.FlatSize fs in Model.FlatSize)
                        {
                            <option value="@fs.Id">@fs.Name</option>
                        }
                    }
                </select>
            </div>

            @*<div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.CoatingId">Stock Coating</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.CoatingId">
                    <option value="">Select a Coating...</option>
                    @{
                        foreach (PaperCalc.Models.AspeosStockCoatings coat in Model.Coatings)
                        {
                            <option value="@coat.Id">@coat.Name</option>
                        }
                    }
                </select>
                </div>*@
            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text">Coating</label>
                </div>
                <select onchange="filterStock()" id="coatSelect" class="custom-select" asp-for="AspeosCalculation.CoatType">
                    <option value="">Select a Option...</option>
                    <option value="Uncoated">Uncoated</option>
                    <option value="Coated">Coated</option>
                    <option value="Adhesive">Adhesive</option>
                    <option value="Synthetic">Synthetic</option>
                </select>
            </div>

            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text">Stock</label>
                </div>
                <select id="stockSelect" class="custom-select" asp-for="AspeosCalculation.SheetPrice">
                    <option value="">Select a Coating...</option>
                    @{
                        foreach (PaperCalc.Models.AspeosStock item in Model.Paper)
                        {
                            <option class="@item.CoatType" value="@item.SheetCost">@item.Weight<span>gsm</span> @item.Company @item.ProductName</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="AspeosFormRow">
            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.Colour">Colour</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.Colour">
                    <option value="">Select a Option...</option>
                    <option value="colour">Colour</option>
                    <option value="black">Black</option>
                </select>
            </div>

            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.PrintedSides">Printed Sides</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.PrintedSides">
                    <option value="">Select a Option...</option>
                    <option value="single">Single Sided</option>
                    <option value="double">Double Sided</option>
                </select>
            </div>
        </div>

        <div class="AspeosFormRow">
            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.Folds">Folds</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.Folds">
                    <option value="0">None</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                </select>
            </div>


            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.Creasing">Creasing</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.Creasing">
                    <option value="0">None</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                </select>
            </div>

            <div class="input-group mb-3 aspeosInput">
                <div class="input-group-prepend">
                    <label class="input-group-text" asp-for="AspeosCalculation.NumOfHolePunches">Hole Punches</label>
                </div>
                <select class="custom-select" asp-for="AspeosCalculation.NumOfHolePunches">
                    <option value="0">None</option>
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                </select>
            </div>
        </div>

        <div id="Checkboxes" class="AspeosFormRow">
            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <label asp-for="AspeosCalculation.Trimming"> Trimming</label>
                    </div>
                </div>
                <div class="inputGroupCustomCheckbox"><input asp-for="AspeosCalculation.Trimming" type="checkbox" value="true"></div>
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <label asp-for="AspeosCalculation.Lamination">Lamination</label>
                    </div>
                </div>
                <div class="inputGroupCustomCheckbox"><input asp-for="AspeosCalculation.Lamination" type="checkbox" value="true"></div>
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <label asp-for="AspeosCalculation.SmallJob">Small Job</label>
                    </div>
                </div>
                <div class="inputGroupCustomCheckbox"><input asp-for="AspeosCalculation.SmallJob" type="checkbox" value="true"></div>
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <label asp-for="AspeosCalculation.Urgent">Urgent</label>
                    </div>
                </div>
                <div class="inputGroupCustomCheckbox"><input asp-for="AspeosCalculation.Urgent" type="checkbox" value="true"></div>
            </div>

            <div class="input-group mb-3">
                <div class="input-group-prepend">
                    <div class="input-group-text">
                        <label asp-for="AspeosCalculation.FileHandling">File Handling</label>
                    </div>
                </div>
                <div class="inputGroupCustomCheckbox"><input asp-for="AspeosCalculation.FileHandling" type="checkbox" value="true"></div>
                <input type="number" class="form-control" value="@Model.Settings.FilehandlingCost" asp-for="AspeosCalculation.FileHandlingFee">
            </div>
        </div>

        <input onclick="CalculationSubmitted()" type="submit" class="btn btn-success calcSubmit" />

    </form>

    @{ if (Model.AspeosCalculation.JobCost > 0)
        {
            <div id="calculationPost">

                <dl id="calculationTotals">

                    <dt>Job Cost:</dt>
                    <dd>@Html.DisplayFor(model => Model.AspeosCalculation.JobCost)</dd>

                    <dt>GST:</dt>
                    <dd>@Html.DisplayFor(model => Model.AspeosCalculation.GST)</dd>

                    <dt>Job Cost (GST Inc):</dt>
                    <dd>@Html.DisplayFor(model => Model.AspeosCalculation.JobCostGstInc)</dd>
                </dl>

                <div>
                    <a class="btn btn-primary" id="showCalculationsButton" data-toggle="collapse" href="#CalculationValues" role="button" aria-expanded="false" aria-controls="CalculationValues">Show Calculation Values</a>
                    <button class="btn btn-primary" onclick="generate()">Generate document</button>
                </div>

            </div>
        }
    }

    <div id="CalculationValues" class="collapse">
        <table>
            <tr>
                <th>PER SRA</th>
                <th>Base Click Rate</th>
                <th>Click Side Multiplier</th>
                <th>Click Size Multiplier</th>
                <th>Click Rate</th>
                <th>Sheet Price</th>
                <th>Cuts</th>
                <th>Hole Punch</th>
                <th>Lamination</th>
                <th>Creasing</th>
                <th>Folding</th>
            </tr>
            <tr>
                <td>@Model.AspeosCalculation.PerSRA</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.BaseClickRate)</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.ClickSideMultiplier)</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.ClickSizeMultiplier)</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.ClickRate)</td>
                <td id="SheetPrice">@Html.DisplayFor(model => Model.AspeosCalculation.SheetPrice)</td>
                <td>@Model.AspeosCalculation.Cuts</td>
                <td>@Model.AspeosCalculation.HolePunches</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.LaminationCost)</td>
                <td>@Model.AspeosCalculation.CreasingRate</td>
                <td>@Model.AspeosCalculation.FoldingRate</td>
            </tr>
            <tr>
                <th>Paper Cost</th>
                <th>Buffer</th>
                <th>Finishings</th>
                <th>Multiplier</th>
                <th>Minimum</th>
                <th>File Handling</th>
            </tr>
            <tr>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.PaperCost)</td>
                <td>@Model.AspeosCalculation.Buffer</td>
                <td>@Html.DisplayFor(model => Model.AspeosCalculation.FinishingsCost)</td>
                <td>@Model.AspeosCalculation.Multiplier</td>
                <td>@Model.AspeosCalculation.Minimum</td>
                <td>@Model.AspeosCalculation.FileHandlingCost</td>
            </tr>
            <tr>
                <th>Job Cost</th>
                <th>GST</th>
                <th>Cost + GST</th>
            </tr>
            <tr>
                <td id="JobCost">@Html.DisplayFor(model => Model.AspeosCalculation.JobCost)</td>
                <td id="GST">@Html.DisplayFor(model => Model.AspeosCalculation.GST)</td>
                <td id="JobCostGstInc">@Html.DisplayFor(model => Model.AspeosCalculation.JobCostGstInc)</td>
            </tr>
        </table>
    </div>

</div>


<script>
    function calculationValuesDisplay() {
        let button = document.getElementById("showCalculationsButton");
        let table = document.getElementById("CalculationValues");

        if (button.innerText == "Show Calculation Values") {
            table.classList.remove("hidden");
            button.innerText = "Hide Calculation Values";
        } else if (button.innerText == "Hide Calculation Values") {
            table.classList.add("hidden");
            button.innerText = "Show Calculation Values";
        }
    }
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/docxtemplater/3.37.13/docxtemplater.js"></script>
<script src="https://unpkg.com/pizzip@3.1.4/dist/pizzip.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/1.3.8/FileSaver.js"></script>
<script src="https://unpkg.com/pizzip@3.1.4/dist/pizzip-utils.js"></script>
<script>

    const TemplateUrl = window.location.href + "CreateTemplate.docx";

    function getDateString() {
        const now = new Date();
        return (now.getDate() < 10 ? "0" + now.getDate() : now.getDate()) + "/" + ((now.getMonth() + 1) < 10 ? "0" + (now.getMonth() + 1) : (now.getMonth() + 1)) + "/" + now.getFullYear();
    }
    function loadFile(url, callback) {
        PizZipUtils.getBinaryContent(url, callback);
    }
    function getExtras() {
        let foldsNum = document.getElementById("AspeosCalculation_Folds").value > 0 ? "Folding, " : "";
        let creasingNum = document.getElementById("AspeosCalculation_Creasing").value > 0 ? "Creasing, " : "";
        let trimmingBool = document.getElementById("AspeosCalculation_Trimming").checked ? "Trimming, " : "";
        let holePunchBool = document.getElementById("AspeosCalculation_HolePunch").checked ? "Hole Punch, " : "";
        let laminationBool = document.getElementById("AspeosCalculation_Lamination").checked ? "Lamination, " : "";
        let smallJobBool = document.getElementById("AspeosCalculation_SmallJob").checked ? "Small Job, " : "";
        let urgentBool = document.getElementById("AspeosCalculation_Urgent").checked ? "Urgency, " : "";
        let fileHandlingBool = document.getElementById("AspeosCalculation_FileHandling").checked ? "File Handling, " : "";

        let strings = [foldsNum, creasingNum, trimmingBool, holePunchBool, laminationBool, smallJobBool, urgentBool, fileHandlingBool];

        let extrasString = " ";
        for (let i = 0; i < strings.length; i++) {
            console.log("wtf")
            extrasString = extrasString + strings[i];
        }
        return extrasString.slice(0, extrasString.length - 2);

    }
    function getPrinted() {
        var sides = document.getElementById("AspeosCalculation_PrintedSides").value == "single" ? "Single Sided - " : "Double Sided - ";
        var colour = document.getElementById("AspeosCalculation_Colour").value == "colour" ? "Colour" : "Black and White";
        return sides + colour;
    }


    window.generate = function generate() {
        loadFile(
            TemplateUrl,
            function (error, content) {
                if (error) {
                    throw error;
                }
                const zip = new PizZip(content);
                const doc = new window.docxtemplater(zip, {
                    paragraphLoop: true,
                    linebreaks: true,
                });

                // Render the document (Replace {first_name} by John, {last_name} by Doe, ...)
                doc.render({
                    date: getDateString(),
                    stock: document.getElementById("AspeosCalculation_CoatingId").options[document.getElementById("AspeosCalculation_CoatingId").selectedIndex].text,
                    printed: getPrinted(),
                    coating: "",
                    extras: getExtras(),
                    size: document.getElementById("AspeosCalculation_FlatSizeId").options[document.getElementById("AspeosCalculation_FlatSizeId").selectedIndex].text,
                    quantity: document.getElementById("AspeosCalculation_Quantity").value,
                    unitPrice: document.getElementById("SheetPrice").innerText,
                    subtotal: document.getElementById("JobCost").innerText,
                    gst: document.getElementById("GST").innerText,
                    total: document.getElementById("JobCostGstInc").innerText,
                });

                const blob = doc.getZip().generate({
                    type: "blob",
                    mimeType:
                        "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    // compression: DEFLATE adds a compression step.
                    // For a 50MB output document, expect 500ms additional CPU time
                    compression: "DEFLATE",
                });
                // Output the document using Data-URI
                saveAs(blob, "output.docx");
            }
        );
    };



</script>
